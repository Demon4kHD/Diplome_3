{"name": "Переход в раздел «История заказов» при наличии у пользователя заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (207, 1056) is out of bounds of viewport dimensions (1366, 683)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:479:5\nassertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2380:11\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1161:21\ndispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2036:14\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2035:39\ndispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1946:27\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1948:7\nperformActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:491:23\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:144:31", "trace": "is_authorize_user = (<page_objects.order_feed_object.OrderFeedObject object at 0x107090d40>, <api_endpoints.api_endpoints.CreateAndDeleteUserEndpoints object at 0x1070916d0>)\n\n    @allure.step('Авторизация ранее созданного пользователя и создание заказа')\n    @pytest.fixture\n    def is_authorize_user_created_order(is_authorize_user):\n        page, api_user = is_authorize_user\n>       page.create_burger()\n\nconftest.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects/create_order_object.py:77: in create_burger\n    self.dragging_ingredient(DATA.INGREDIENT_MAIN, DATA.BURGER_BASKET)\npage_objects/create_order_object.py:52: in dragging_ingredient\n    action_chains.drag_and_drop(draggable_ingredient, location_for_drop).perform()\n.venv/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n.venv/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x107091910>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"Move target (207, 1056) is out of b...ys.mjs:491:23\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:144:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (207, 1056) is out of bounds of viewport dimensions (1366, 683)\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       MoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:479:5\nE       assertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2380:11\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1161:21\nE       dispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2036:14\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2035:39\nE       dispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1946:27\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1948:7\nE       performActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:491:23\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:144:31\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: MoveTargetOutOfBoundsException"}, "parameters": [{"name": "start_driver_and_create_page", "value": "'firefox'"}], "start": 1732604713176, "stop": 1732604713176, "uuid": "b63a9fd6-a633-42b8-98e8-80b965723746", "historyId": "d019eba3fe82253d30405ce6210796dd", "testCaseId": "7e746ac17547ac0020eefa35404f39c1", "fullName": "tests.test_personal_account.TestPersonalAccount#test_click_orders_history_link_for_user_with_order", "labels": [{"name": "feature", "value": "Проверка Личного кабинета"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_personal_account"}, {"name": "subSuite", "value": "TestPersonalAccount"}, {"name": "host", "value": "MacBook-Air-Dmitriy.local"}, {"name": "thread", "value": "26792-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_personal_account"}]}